<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ssg.com.houssg.dao.UserDao">


	<!-- 닉네임 중복확인 -->
	<select id="nicknameCheck" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from user
		where nickname=#{nickname}
	</select>

	<!-- 닉네임 변경 -->
	<update id="changeNickname">
		update user set nickname = #{nickname}
		where userId =
		#{userId};
	</update>

	<!-- 회원가입 -->
	<insert id="signUp" parameterType="ssg.com.houssg.dto.UserDto">
		insert into
		user(department,
		nickname, email, password, userId, point)
		values
		(#{department},#{nickname},#{email}, #{password}, #{userId}, 0)
	</insert>

	<!-- 로그인 -->
	<select id="login" parameterType="ssg.com.houssg.dto.UserDto"
		resultType="ssg.com.houssg.dto.UserDto">
		select userId, nickname, email, password, point, department
		from
		user
		where userId=#{userId} and password=#{password}
	</select>

	<!-- 마지막 로그인 날짜 업데이트 -->
	<update id="updateLastLoginDate" parameterType="ssg.com.houssg.dto.UserDto">
		UPDATE user
		SET
		lastLoginDate = #{lastLoginDate}
		WHERE userId = #{userId}
	</update>

	<!-- 비밀번호 업데이트 -->
	<update id="updatePassword" parameterType="ssg.com.houssg.dto.UserDto">
		UPDATE user
		SET password = #{password} <!-- 필드 이름을 newPassword로 변경 -->
		WHERE userId = #{userId}
	</update>

	<!-- 아이디로 유저 식별 -->
	<select id="findUserById" parameterType="java.util.Map"
		resultType="ssg.com.houssg.dto.UserDto">
		SELECT *
		FROM user
		WHERE userId = #{userId}
	</select>

	<select id="findLanguage" parameterType="ssg.com.houssg.dto.LanguageCategoryDto"
		resultType="ssg.com.houssg.dto.LanguageCategoryDto">
		select languageId, languageName
		from
		languagecategory
	</select>

	<!-- 본인 포지션 변경 -->
	<update id="updatePosition" parameterType="ssg.com.houssg.dto.UserDto">
		UPDATE user
		SET
		position = #{position}
		WHERE userId = #{userId}
	</update>

	<!-- 사용자의 기술 스택 전체 삭제 -->
	<delete id="deleteUserTechStack" parameterType="java.lang.String">
		DELETE FROM
		interestedlanguages WHERE userId = #{userId}
	</delete>

	<!-- 사용자의 기술 스택 업데이트 -->
	<select id="selectLanguageId" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT languageId FROM languagecategory WHERE languageName
		LIKE #{tech}
	</select>

	<insert id="insertUserTechStack" parameterType="java.util.Map">
		INSERT INTO
		interestedlanguages (userId, languageId)
		VALUES (#{userId},
		#{languageId})
	</insert>

	<!-- 유저 프로필 조회 -->
	<select id="getUserProfile" parameterType="java.lang.String"
		resultMap="userProfileResultMap">
		SELECT u.userId, u.nickname, u.department, u.email, u.point,
		u.position,
		lc.languageName AS techStack
		FROM user u
		LEFT JOIN interestedlanguages il ON u.userId = il.userId
		LEFT JOIN languagecategory lc ON il.languageId = lc.languageId
		WHERE u.userId = #{userId};
	</select>

	<!-- UserProfileDto에 대한 resultMap 설정 -->
	<resultMap id="userProfileResultMap" type="ssg.com.houssg.dto.UserProfileDto">
		<id property="userId" column="userId" />
		<result property="nickname" column="nickname" />
		<result property="department" column="department" />
		<result property="email" column="email" />
		<result property="point" column="point" />
		<result property="position" column="position" />
		<!-- techStack을 리스트로 처리 -->
		<collection property="techStack" ofType="java.lang.String"
			javaType="java.util.ArrayList" resultMap="techStackResultMap" />
	</resultMap>

	<!-- techStack에 대한 resultMap 설정 -->
	<resultMap id="techStackResultMap" type="java.lang.String">
		<result column="techStack" property="techStack" />
	</resultMap>
	
	 <!-- 마이페이지 - 내가 가입한 모임 조회 -->
    <select id="getMyboard" parameterType="String" resultType="ssg.com.houssg.dto.BoardDto">
        SELECT b.category, b.title, b.userId
        FROM participantboard p
        JOIN board b ON p.boardId = b.boardId
        WHERE p.userId = #{userId} AND p.joinFlag = 1;
    </select>

</mapper>