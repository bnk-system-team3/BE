<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ssg.com.houssg.dao.BoardDao">


	<!-- 게시글 저장 -->
	<insert id="saveBoard" parameterType="ssg.com.houssg.dto.BoardDto">
		INSERT INTO board
		(title,
		description, participantCnt, recruitCnt, onOffStatus, activeFlag,
		chattingUrl, startDate, endDate, createDate, userId, dueDate,
		location, viewCnt, category, nickname)
		VALUES
		(#{title}, #{description},
		1, #{recruitCnt}, #{onOffStatus}, 1,
		#{chattingUrl},
		#{startDate}, #{endDate}, #{createDate}, #{userId},
		#{dueDate},
		#{location}, 0, #{category}, #{nickname})
	</insert>

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="ssg.com.houssg.dto.BoardDto">
		UPDATE board
		SET
		title =
		#{title},
		description = #{description},
		participantCnt =
		#{participantCnt},
		recruitCnt = #{recruitCnt},
		onOffStatus =
		#{onOffStatus},
		activeFlag = #{activeFlag},
		chattingUrl =
		#{chattingUrl},
		startDate = #{startDate},
		endDate = #{endDate},
		dueDate =
		#{dueDate},
		location = #{location}
		category = #{category}
		WHERE
		boardId =
		#{boardId}
	</update>

	<!-- 게시글 작성자 조회 -->
	<select id="findUser" parameterType="ssg.com.houssg.dto.BoardDto"
		resultType="String">
		select userId
		from board
		where boardId = #{boardId}
	</select>

	<!-- 키워드 검색 조회 -->
	<select id="searchKeyword" parameterType="ssg.com.houssg.dto.BoardDto"
		resultType="String">
		select boardId
		from board
		where title like "%#{keyword}%"
		or
		description like "%#{keyword}%"
	</select>


	<!-- 홈 화면 모임 정보 조회 -->
	<select id="getHomeBoardList" resultType="ssg.com.houssg.dto.BoardDto">
		select boardId,
		category, dueDate, title, userId, viewCnt
		from board
	</select>


	<!-- 후기 작성 -->
	<insert id="saveReview" parameterType="ssg.com.houssg.dto.ReviewDto">
		INSERT INTO review
		(reviewContent, boardId, userId, createDate)
		VALUES
		(#{reviewContent},#{boardId},#{userId},#{createDate})
	</insert>

	<!-- 모임 참가 신청 -->
	<insert id="applyForParticipation" parameterType="ssg.com.houssg.dto.ParticipantBoardDto">
		INSERT INTO
		participantboard
		(captainFlag, boardId, userId, joinFlag)
		VALUES
		(0,#{boardId},#{userId},2)
	</insert>

	<!-- 지원자 가입신청 승인/거절 -->
	<update id="updateParticipantStatus" parameterType="ssg.com.houssg.dto.ParticipantBoardDto">
		UPDATE
		participantboard
		SET
		joinFlag = #{joinFlag}
		WHERE
		userId = #{userId} AND
		boardId = #{boardId}
	</update>

	<!-- 내가 생성한 프로젝트 목록 조회 -->
	<select id="getMyProjects" parameterType="String"
		resultType="ssg.com.houssg.dto.BoardDto">
		SELECT boardId, title
		FROM board
		WHERE userId = #{userId}
	</select>

	<!-- 해당 프로젝트에 지원한 참가자 이름 및 가입신청 상태 조회 -->
	<select id="getApplicantsForProject" parameterType="int"
		resultType="ssg.com.houssg.dto.ParticipantBoardDto">
		SELECT pb.boardId, pb.userId, pb.joinFlag
		FROM
		participantboard pb
		JOIN user u ON pb.userId = u.userId
		WHERE pb.boardId
		= #{boardId}
	</select>

	<!-- 카테고리별 게시글 조회 -->
	<select id="getBoardByCategory" parameterType="String"
		resultType="ssg.com.houssg.dto.BoardDto">
		SELECT boardId, category, dueDate, title, userId, viewCnt
		FROM board
		WHERE category = #{category}
	</select>

	<!-- 키워드 검색 조회 -->
	<select id="getBoardByKeyword" parameterType="String"
		resultType="ssg.com.houssg.dto.BoardDto">
		SELECT boardId, category, dueDate, title, userId, viewCnt
		FROM board
		WHERE title LIKE CONCAT('%', #{keyword}, '%') OR description
		LIKE
		CONCAT('%', #{keyword}, '%')
	</select>

	<!-- viewCnt가 가장 높은 순서로 게시글 조회 -->
	<select id="getBoardByViewCnt" resultType="ssg.com.houssg.dto.BoardDto">
		SELECT boardId,
		category, dueDate, title, userId, viewCnt
		FROM board
		ORDER BY viewCnt
		DESC
	</select>

	<!-- 팀 페이지 작성-->
	<update id="updateTeamContent" parameterType="ssg.com.houssg.dto.BoardDto">
		UPDATE board
		SET
		teamContent = #{teamContent}
		WHERE
		boardId =
		#{boardId}
	</update>



</mapper>